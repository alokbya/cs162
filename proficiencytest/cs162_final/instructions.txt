For this proficiency test you will write a program that works with a linear
linked list.

The file supplied.o contains binary code that can build, and display a linear
linked list.

For this test, you will need to write the following functions in list.cpp,
add function prototypes for them to list.h and invoke the functions in
main.cpp.

- int countEven(node* head)

  compute and return the number of nodes that contain an even number in the
  linear linked list.

- int removeEven(node *& head)	

  remove all the nodes that contain an even number in the linear linked list
  and return the number of nodes removed.

For test submission, use tar to combine your files into a single bundle:

tar cvf final.tar list.h list.cpp main.cpp

After that, use the 'turnin' program to turnin the tar file:

turnin submit final.tar

(If you haven't setup your path to use turnin and haven't already configured
the professor and class then you need to use the long form:
~mike.noel/bin/turnin submit prof=mike.noel course=cs162 final.tar)

If you do not turn in ALL of your source files or if I'm unable to compile the
code you submit then you will receive a very low score on the final exam.

The grading criteria are:

5pts The program compiles
3pts The program runs without crashing or hanging
2pts No memory errors or leaks
5pts Correctly counts the number of even nodes
5pts Correctly removes the even nodes

You can get partial credit so be sure to turn in whatever you have by the end
of the testing time period.

== Lab 05 ==

Copy the files from ~mike.noel/classes/cs261/students/labs/lab05 into your own
lab directory. The file supplied.o contains code that can build, display, and
destroy a doubly linked list. 

For this lab, you will need to write the following two functions in dlist.cpp,
and add function prototypes for them to dlist.h.

    void duplicate(node * head, node *& newHead)	

      Recursively create a copy of the source list with head where newhead is
      the head of the destination list.

    void removeTwo(node *& head)	

      Recursively remove all the 2s from the list.

After implementing the two functions, you need to invoke the functions in
main.cpp.

Run your program in valgrind and make sure there are no memory errors or
memory leaks. Assuming the executable file is named app

     valgrind --tool=memcheck --leak-check=full ./app

For lab05 submission, create a tar file containing dlist.cpp, dlist.h, and
main.cpp. Use the turnin command to submit it.

     tar cvf lab05_files.tar main.cpp dlist.cpp dlist.h
     ~mike.noel/bin/turnin cs261 lab05_files.tar

----------------------------------------------------------------------

More Practice Problems: (not for submission)

    int displayReverse(node* head)

      Write a function to display the list in reverse order. Return the number
      of nodes.

    int addAfter2(node*& head, int toAdd)

      Write a function to add the data passed in to the function after every
      instance of a 2 in the list. Return the number of nodes that were added
      to the list.

    int reverseAll(node*& head)

      Write a Function to reverse the list.

